# Generated by Django 2.2.1 on 2020-07-30 08:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MicroUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.CharField(blank=True, max_length=30, null=True)),
                ('nickname', models.CharField(blank=True, default='微梦用户', max_length=30)),
                ('phone', models.CharField(max_length=11)),
                ('signature', models.TextField(blank=True, max_length=200)),
                ('sex', models.SmallIntegerField(default=0)),
                ('avatar', models.URLField(default='')),
                ('last_sign', models.DateTimeField(default=django.utils.timezone.now)),
                ('pea', models.IntegerField(default=10)),
                ('vip', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.IntegerField()),
                ('image_url', models.URLField()),
                ('url', models.URLField(blank=True)),
                ('type', models.SmallIntegerField()),
                ('title', models.CharField(blank=True, max_length=36)),
                ('desc', models.TextField(blank=True, max_length=300)),
                ('color', models.CharField(blank=True, max_length=10)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20)),
                ('description', models.TextField(default='', max_length=300)),
                ('logo', models.URLField(default='')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('type', models.SmallIntegerField(choices=[(0, '动漫'), (1, 'Cos'), (2, '写真')], default=1, verbose_name='类型')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Splash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, default='', max_length=30)),
                ('cover_url', models.URLField(default='')),
                ('link_url', models.URLField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=120)),
                ('type', models.SmallIntegerField(choices=[(0, '动漫'), (1, 'Cos'), (2, '写真')], default=1, verbose_name='类型')),
                ('description', models.TextField(blank=True, default='', max_length=300)),
                ('cover', models.URLField(blank=True, default='')),
                ('cover_1', models.URLField(blank=True, default='')),
                ('cover_2', models.URLField(blank=True, default='')),
                ('tag', models.CharField(blank=True, default='', max_length=60)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('source', models.CharField(default='', max_length=60)),
                ('source_id', models.CharField(blank=True, default='', max_length=30)),
                ('supported', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='subject_owner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('appUrl', models.URLField(default='')),
                ('updateInfo', models.CharField(max_length=120)),
                ('isForce', models.BooleanField(default=False)),
                ('versionCode', models.SmallIntegerField()),
                ('versionName', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Wallpaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(default='')),
                ('origin_url', models.URLField(default='')),
                ('sw', models.IntegerField(blank=True, default=0)),
                ('sh', models.IntegerField(blank=True, default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('type', models.SmallIntegerField(choices=[(0, '动漫'), (1, 'Cos'), (2, '写真')], default=1, verbose_name='类型')),
                ('source', models.CharField(default='', max_length=60, verbose_name='来源')),
                ('source_id', models.CharField(blank=True, default='', max_length=30)),
                ('collect_num', models.IntegerField(default=0)),
                ('comment_num', models.IntegerField(default=0)),
                ('share_num', models.IntegerField(default=0)),
                ('download_num', models.IntegerField(default=0)),
                ('collected', models.BooleanField(default=False)),
                ('banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wallpaper.Banner')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wallpaper.Category')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wallpaper.Subject')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='UserCollectPaper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='添加日期')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wallpaper.Wallpaper')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wallpaper.Wallpaper')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
